/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * OpenAPI spec version: 2024.3.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ContextObject
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-01T19:29:10.951410897Z[GMT]")

public class ContextObject {
  @SerializedName("type")
  private String type = null;

  @SerializedName("href")
  private String href = null;

  @SerializedName("external_urls")
  private AllOfContextObjectExternalUrls externalUrls = null;

  @SerializedName("uri")
  private String uri = null;

  public ContextObject type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The object type, e.g. \&quot;artist\&quot;, \&quot;playlist\&quot;, \&quot;album\&quot;, \&quot;show\&quot;. 
   * @return type
  **/
  @Schema(description = "The object type, e.g. \"artist\", \"playlist\", \"album\", \"show\". ")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ContextObject href(String href) {
    this.href = href;
    return this;
  }

   /**
   * A link to the Web API endpoint providing full details of the track.
   * @return href
  **/
  @Schema(description = "A link to the Web API endpoint providing full details of the track.")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public ContextObject externalUrls(AllOfContextObjectExternalUrls externalUrls) {
    this.externalUrls = externalUrls;
    return this;
  }

   /**
   * External URLs for this context.
   * @return externalUrls
  **/
  @Schema(description = "External URLs for this context.")
  public AllOfContextObjectExternalUrls getExternalUrls() {
    return externalUrls;
  }

  public void setExternalUrls(AllOfContextObjectExternalUrls externalUrls) {
    this.externalUrls = externalUrls;
  }

  public ContextObject uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the context. 
   * @return uri
  **/
  @Schema(description = "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the context. ")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContextObject contextObject = (ContextObject) o;
    return Objects.equals(this.type, contextObject.type) &&
        Objects.equals(this.href, contextObject.href) &&
        Objects.equals(this.externalUrls, contextObject.externalUrls) &&
        Objects.equals(this.uri, contextObject.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, href, externalUrls, uri);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContextObject {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    externalUrls: ").append(toIndentedString(externalUrls)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
