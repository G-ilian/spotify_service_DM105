/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * OpenAPI spec version: 2024.3.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CursorPagingObject
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-01T19:29:10.951410897Z[GMT]")

public class CursorPagingObject {
  @SerializedName("href")
  private String href = null;

  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("next")
  private String next = null;

  @SerializedName("cursors")
  private AllOfCursorPagingObjectCursors cursors = null;

  @SerializedName("total")
  private Integer total = null;

  public CursorPagingObject href(String href) {
    this.href = href;
    return this;
  }

   /**
   * A link to the Web API endpoint returning the full result of the request.
   * @return href
  **/
  @Schema(description = "A link to the Web API endpoint returning the full result of the request.")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public CursorPagingObject limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * The maximum number of items in the response (as set in the query or by default).
   * @return limit
  **/
  @Schema(description = "The maximum number of items in the response (as set in the query or by default).")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public CursorPagingObject next(String next) {
    this.next = next;
    return this;
  }

   /**
   * URL to the next page of items. ( &#x60;null&#x60; if none)
   * @return next
  **/
  @Schema(description = "URL to the next page of items. ( `null` if none)")
  public String getNext() {
    return next;
  }

  public void setNext(String next) {
    this.next = next;
  }

  public CursorPagingObject cursors(AllOfCursorPagingObjectCursors cursors) {
    this.cursors = cursors;
    return this;
  }

   /**
   * The cursors used to find the next set of items.
   * @return cursors
  **/
  @Schema(description = "The cursors used to find the next set of items.")
  public AllOfCursorPagingObjectCursors getCursors() {
    return cursors;
  }

  public void setCursors(AllOfCursorPagingObjectCursors cursors) {
    this.cursors = cursors;
  }

  public CursorPagingObject total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * The total number of items available to return.
   * @return total
  **/
  @Schema(description = "The total number of items available to return.")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CursorPagingObject cursorPagingObject = (CursorPagingObject) o;
    return Objects.equals(this.href, cursorPagingObject.href) &&
        Objects.equals(this.limit, cursorPagingObject.limit) &&
        Objects.equals(this.next, cursorPagingObject.next) &&
        Objects.equals(this.cursors, cursorPagingObject.cursors) &&
        Objects.equals(this.total, cursorPagingObject.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(href, limit, next, cursors, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CursorPagingObject {\n");
    
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    next: ").append(toIndentedString(next)).append("\n");
    sb.append("    cursors: ").append(toIndentedString(cursors)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
