/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * OpenAPI spec version: 2024.3.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * PlayerPlayBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-01T19:29:10.951410897Z[GMT]")

public class PlayerPlayBody extends HashMap<String, Object> {
  @SerializedName("context_uri")
  private String contextUri = null;

  @SerializedName("uris")
  private List<String> uris = null;

  @SerializedName("offset")
  private Map<String, Object> offset = null;

  @SerializedName("position_ms")
  private Integer positionMs = null;

  public PlayerPlayBody contextUri(String contextUri) {
    this.contextUri = contextUri;
    return this;
  }

   /**
   * Optional. Spotify URI of the context to play. Valid contexts are albums, artists &amp; playlists. &#x60;{context_uri:\&quot;spotify:album:1Je1IMUlBXcx1Fz0WE7oPT\&quot;}&#x60; 
   * @return contextUri
  **/
  @Schema(description = "Optional. Spotify URI of the context to play. Valid contexts are albums, artists & playlists. `{context_uri:\"spotify:album:1Je1IMUlBXcx1Fz0WE7oPT\"}` ")
  public String getContextUri() {
    return contextUri;
  }

  public void setContextUri(String contextUri) {
    this.contextUri = contextUri;
  }

  public PlayerPlayBody uris(List<String> uris) {
    this.uris = uris;
    return this;
  }

  public PlayerPlayBody addUrisItem(String urisItem) {
    if (this.uris == null) {
      this.uris = new ArrayList<String>();
    }
    this.uris.add(urisItem);
    return this;
  }

   /**
   * Optional. A JSON array of the Spotify track URIs to play. For example: &#x60;{\&quot;uris\&quot;: [\&quot;spotify:track:4iV5W9uYEdYUVa79Axb7Rh\&quot;, \&quot;spotify:track:1301WleyT98MSxVHPZCA6M\&quot;]}&#x60; 
   * @return uris
  **/
  @Schema(description = "Optional. A JSON array of the Spotify track URIs to play. For example: `{\"uris\": [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\", \"spotify:track:1301WleyT98MSxVHPZCA6M\"]}` ")
  public List<String> getUris() {
    return uris;
  }

  public void setUris(List<String> uris) {
    this.uris = uris;
  }

  public PlayerPlayBody offset(Map<String, Object> offset) {
    this.offset = offset;
    return this;
  }

  public PlayerPlayBody putOffsetItem(String key, Object offsetItem) {
    if (this.offset == null) {
      this.offset = new HashMap<String, Object>();
    }
    this.offset.put(key, offsetItem);
    return this;
  }

   /**
   * Optional. Indicates from where in the context playback should start. Only available when context_uri corresponds to an album or playlist object \&quot;position\&quot; is zero based and can’t be negative. Example: &#x60;\&quot;offset\&quot;: {\&quot;position\&quot;: 5}&#x60; \&quot;uri\&quot; is a string representing the uri of the item to start at. Example: &#x60;\&quot;offset\&quot;: {\&quot;uri\&quot;: \&quot;spotify:track:1301WleyT98MSxVHPZCA6M\&quot;}&#x60; 
   * @return offset
  **/
  @Schema(description = "Optional. Indicates from where in the context playback should start. Only available when context_uri corresponds to an album or playlist object \"position\" is zero based and can’t be negative. Example: `\"offset\": {\"position\": 5}` \"uri\" is a string representing the uri of the item to start at. Example: `\"offset\": {\"uri\": \"spotify:track:1301WleyT98MSxVHPZCA6M\"}` ")
  public Map<String, Object> getOffset() {
    return offset;
  }

  public void setOffset(Map<String, Object> offset) {
    this.offset = offset;
  }

  public PlayerPlayBody positionMs(Integer positionMs) {
    this.positionMs = positionMs;
    return this;
  }

   /**
   * Indicates from what position to start playback. Must be a positive number. Passing in a position that is greater than the length of the track will cause the player to start playing the next song. 
   * @return positionMs
  **/
  @Schema(description = "Indicates from what position to start playback. Must be a positive number. Passing in a position that is greater than the length of the track will cause the player to start playing the next song. ")
  public Integer getPositionMs() {
    return positionMs;
  }

  public void setPositionMs(Integer positionMs) {
    this.positionMs = positionMs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerPlayBody playerPlayBody = (PlayerPlayBody) o;
    return Objects.equals(this.contextUri, playerPlayBody.contextUri) &&
        Objects.equals(this.uris, playerPlayBody.uris) &&
        Objects.equals(this.offset, playerPlayBody.offset) &&
        Objects.equals(this.positionMs, playerPlayBody.positionMs) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contextUri, uris, offset, positionMs, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerPlayBody {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    contextUri: ").append(toIndentedString(contextUri)).append("\n");
    sb.append("    uris: ").append(toIndentedString(uris)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    positionMs: ").append(toIndentedString(positionMs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
