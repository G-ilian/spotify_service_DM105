/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * OpenAPI spec version: 2024.3.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * AudioAnalysisObjectMeta
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-01T19:29:10.951410897Z[GMT]")

public class AudioAnalysisObjectMeta {
  @SerializedName("analyzer_version")
  private String analyzerVersion = null;

  @SerializedName("platform")
  private String platform = null;

  @SerializedName("detailed_status")
  private String detailedStatus = null;

  @SerializedName("status_code")
  private Integer statusCode = null;

  @SerializedName("timestamp")
  private Long timestamp = null;

  @SerializedName("analysis_time")
  private BigDecimal analysisTime = null;

  @SerializedName("input_process")
  private String inputProcess = null;

  public AudioAnalysisObjectMeta analyzerVersion(String analyzerVersion) {
    this.analyzerVersion = analyzerVersion;
    return this;
  }

   /**
   * The version of the Analyzer used to analyze this track.
   * @return analyzerVersion
  **/
  @Schema(example = "4.0.0", description = "The version of the Analyzer used to analyze this track.")
  public String getAnalyzerVersion() {
    return analyzerVersion;
  }

  public void setAnalyzerVersion(String analyzerVersion) {
    this.analyzerVersion = analyzerVersion;
  }

  public AudioAnalysisObjectMeta platform(String platform) {
    this.platform = platform;
    return this;
  }

   /**
   * The platform used to read the track&#x27;s audio data.
   * @return platform
  **/
  @Schema(example = "Linux", description = "The platform used to read the track's audio data.")
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }

  public AudioAnalysisObjectMeta detailedStatus(String detailedStatus) {
    this.detailedStatus = detailedStatus;
    return this;
  }

   /**
   * A detailed status code for this track. If analysis data is missing, this code may explain why.
   * @return detailedStatus
  **/
  @Schema(example = "OK", description = "A detailed status code for this track. If analysis data is missing, this code may explain why.")
  public String getDetailedStatus() {
    return detailedStatus;
  }

  public void setDetailedStatus(String detailedStatus) {
    this.detailedStatus = detailedStatus;
  }

  public AudioAnalysisObjectMeta statusCode(Integer statusCode) {
    this.statusCode = statusCode;
    return this;
  }

   /**
   * The return code of the analyzer process. 0 if successful, 1 if any errors occurred.
   * @return statusCode
  **/
  @Schema(example = "0", description = "The return code of the analyzer process. 0 if successful, 1 if any errors occurred.")
  public Integer getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(Integer statusCode) {
    this.statusCode = statusCode;
  }

  public AudioAnalysisObjectMeta timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The Unix timestamp (in seconds) at which this track was analyzed.
   * @return timestamp
  **/
  @Schema(example = "1495193577", description = "The Unix timestamp (in seconds) at which this track was analyzed.")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public AudioAnalysisObjectMeta analysisTime(BigDecimal analysisTime) {
    this.analysisTime = analysisTime;
    return this;
  }

   /**
   * The amount of time taken to analyze this track.
   * @return analysisTime
  **/
  @Schema(example = "6.93906", description = "The amount of time taken to analyze this track.")
  public BigDecimal getAnalysisTime() {
    return analysisTime;
  }

  public void setAnalysisTime(BigDecimal analysisTime) {
    this.analysisTime = analysisTime;
  }

  public AudioAnalysisObjectMeta inputProcess(String inputProcess) {
    this.inputProcess = inputProcess;
    return this;
  }

   /**
   * The method used to read the track&#x27;s audio data.
   * @return inputProcess
  **/
  @Schema(example = "libvorbisfile L+R 44100->22050", description = "The method used to read the track's audio data.")
  public String getInputProcess() {
    return inputProcess;
  }

  public void setInputProcess(String inputProcess) {
    this.inputProcess = inputProcess;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AudioAnalysisObjectMeta audioAnalysisObjectMeta = (AudioAnalysisObjectMeta) o;
    return Objects.equals(this.analyzerVersion, audioAnalysisObjectMeta.analyzerVersion) &&
        Objects.equals(this.platform, audioAnalysisObjectMeta.platform) &&
        Objects.equals(this.detailedStatus, audioAnalysisObjectMeta.detailedStatus) &&
        Objects.equals(this.statusCode, audioAnalysisObjectMeta.statusCode) &&
        Objects.equals(this.timestamp, audioAnalysisObjectMeta.timestamp) &&
        Objects.equals(this.analysisTime, audioAnalysisObjectMeta.analysisTime) &&
        Objects.equals(this.inputProcess, audioAnalysisObjectMeta.inputProcess);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analyzerVersion, platform, detailedStatus, statusCode, timestamp, analysisTime, inputProcess);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AudioAnalysisObjectMeta {\n");
    
    sb.append("    analyzerVersion: ").append(toIndentedString(analyzerVersion)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    detailedStatus: ").append(toIndentedString(detailedStatus)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    analysisTime: ").append(toIndentedString(analysisTime)).append("\n");
    sb.append("    inputProcess: ").append(toIndentedString(inputProcess)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
