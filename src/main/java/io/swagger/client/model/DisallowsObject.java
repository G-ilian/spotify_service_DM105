/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * OpenAPI spec version: 2024.3.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DisallowsObject
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-01T19:29:10.951410897Z[GMT]")

public class DisallowsObject {
  @SerializedName("interrupting_playback")
  private Boolean interruptingPlayback = null;

  @SerializedName("pausing")
  private Boolean pausing = null;

  @SerializedName("resuming")
  private Boolean resuming = null;

  @SerializedName("seeking")
  private Boolean seeking = null;

  @SerializedName("skipping_next")
  private Boolean skippingNext = null;

  @SerializedName("skipping_prev")
  private Boolean skippingPrev = null;

  @SerializedName("toggling_repeat_context")
  private Boolean togglingRepeatContext = null;

  @SerializedName("toggling_shuffle")
  private Boolean togglingShuffle = null;

  @SerializedName("toggling_repeat_track")
  private Boolean togglingRepeatTrack = null;

  @SerializedName("transferring_playback")
  private Boolean transferringPlayback = null;

  public DisallowsObject interruptingPlayback(Boolean interruptingPlayback) {
    this.interruptingPlayback = interruptingPlayback;
    return this;
  }

   /**
   * Interrupting playback. Optional field.
   * @return interruptingPlayback
  **/
  @Schema(description = "Interrupting playback. Optional field.")
  public Boolean isInterruptingPlayback() {
    return interruptingPlayback;
  }

  public void setInterruptingPlayback(Boolean interruptingPlayback) {
    this.interruptingPlayback = interruptingPlayback;
  }

  public DisallowsObject pausing(Boolean pausing) {
    this.pausing = pausing;
    return this;
  }

   /**
   * Pausing. Optional field.
   * @return pausing
  **/
  @Schema(description = "Pausing. Optional field.")
  public Boolean isPausing() {
    return pausing;
  }

  public void setPausing(Boolean pausing) {
    this.pausing = pausing;
  }

  public DisallowsObject resuming(Boolean resuming) {
    this.resuming = resuming;
    return this;
  }

   /**
   * Resuming. Optional field.
   * @return resuming
  **/
  @Schema(description = "Resuming. Optional field.")
  public Boolean isResuming() {
    return resuming;
  }

  public void setResuming(Boolean resuming) {
    this.resuming = resuming;
  }

  public DisallowsObject seeking(Boolean seeking) {
    this.seeking = seeking;
    return this;
  }

   /**
   * Seeking playback location. Optional field.
   * @return seeking
  **/
  @Schema(description = "Seeking playback location. Optional field.")
  public Boolean isSeeking() {
    return seeking;
  }

  public void setSeeking(Boolean seeking) {
    this.seeking = seeking;
  }

  public DisallowsObject skippingNext(Boolean skippingNext) {
    this.skippingNext = skippingNext;
    return this;
  }

   /**
   * Skipping to the next context. Optional field.
   * @return skippingNext
  **/
  @Schema(description = "Skipping to the next context. Optional field.")
  public Boolean isSkippingNext() {
    return skippingNext;
  }

  public void setSkippingNext(Boolean skippingNext) {
    this.skippingNext = skippingNext;
  }

  public DisallowsObject skippingPrev(Boolean skippingPrev) {
    this.skippingPrev = skippingPrev;
    return this;
  }

   /**
   * Skipping to the previous context. Optional field.
   * @return skippingPrev
  **/
  @Schema(description = "Skipping to the previous context. Optional field.")
  public Boolean isSkippingPrev() {
    return skippingPrev;
  }

  public void setSkippingPrev(Boolean skippingPrev) {
    this.skippingPrev = skippingPrev;
  }

  public DisallowsObject togglingRepeatContext(Boolean togglingRepeatContext) {
    this.togglingRepeatContext = togglingRepeatContext;
    return this;
  }

   /**
   * Toggling repeat context flag. Optional field.
   * @return togglingRepeatContext
  **/
  @Schema(description = "Toggling repeat context flag. Optional field.")
  public Boolean isTogglingRepeatContext() {
    return togglingRepeatContext;
  }

  public void setTogglingRepeatContext(Boolean togglingRepeatContext) {
    this.togglingRepeatContext = togglingRepeatContext;
  }

  public DisallowsObject togglingShuffle(Boolean togglingShuffle) {
    this.togglingShuffle = togglingShuffle;
    return this;
  }

   /**
   * Toggling shuffle flag. Optional field.
   * @return togglingShuffle
  **/
  @Schema(description = "Toggling shuffle flag. Optional field.")
  public Boolean isTogglingShuffle() {
    return togglingShuffle;
  }

  public void setTogglingShuffle(Boolean togglingShuffle) {
    this.togglingShuffle = togglingShuffle;
  }

  public DisallowsObject togglingRepeatTrack(Boolean togglingRepeatTrack) {
    this.togglingRepeatTrack = togglingRepeatTrack;
    return this;
  }

   /**
   * Toggling repeat track flag. Optional field.
   * @return togglingRepeatTrack
  **/
  @Schema(description = "Toggling repeat track flag. Optional field.")
  public Boolean isTogglingRepeatTrack() {
    return togglingRepeatTrack;
  }

  public void setTogglingRepeatTrack(Boolean togglingRepeatTrack) {
    this.togglingRepeatTrack = togglingRepeatTrack;
  }

  public DisallowsObject transferringPlayback(Boolean transferringPlayback) {
    this.transferringPlayback = transferringPlayback;
    return this;
  }

   /**
   * Transfering playback between devices. Optional field.
   * @return transferringPlayback
  **/
  @Schema(description = "Transfering playback between devices. Optional field.")
  public Boolean isTransferringPlayback() {
    return transferringPlayback;
  }

  public void setTransferringPlayback(Boolean transferringPlayback) {
    this.transferringPlayback = transferringPlayback;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DisallowsObject disallowsObject = (DisallowsObject) o;
    return Objects.equals(this.interruptingPlayback, disallowsObject.interruptingPlayback) &&
        Objects.equals(this.pausing, disallowsObject.pausing) &&
        Objects.equals(this.resuming, disallowsObject.resuming) &&
        Objects.equals(this.seeking, disallowsObject.seeking) &&
        Objects.equals(this.skippingNext, disallowsObject.skippingNext) &&
        Objects.equals(this.skippingPrev, disallowsObject.skippingPrev) &&
        Objects.equals(this.togglingRepeatContext, disallowsObject.togglingRepeatContext) &&
        Objects.equals(this.togglingShuffle, disallowsObject.togglingShuffle) &&
        Objects.equals(this.togglingRepeatTrack, disallowsObject.togglingRepeatTrack) &&
        Objects.equals(this.transferringPlayback, disallowsObject.transferringPlayback);
  }

  @Override
  public int hashCode() {
    return Objects.hash(interruptingPlayback, pausing, resuming, seeking, skippingNext, skippingPrev, togglingRepeatContext, togglingShuffle, togglingRepeatTrack, transferringPlayback);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DisallowsObject {\n");
    
    sb.append("    interruptingPlayback: ").append(toIndentedString(interruptingPlayback)).append("\n");
    sb.append("    pausing: ").append(toIndentedString(pausing)).append("\n");
    sb.append("    resuming: ").append(toIndentedString(resuming)).append("\n");
    sb.append("    seeking: ").append(toIndentedString(seeking)).append("\n");
    sb.append("    skippingNext: ").append(toIndentedString(skippingNext)).append("\n");
    sb.append("    skippingPrev: ").append(toIndentedString(skippingPrev)).append("\n");
    sb.append("    togglingRepeatContext: ").append(toIndentedString(togglingRepeatContext)).append("\n");
    sb.append("    togglingShuffle: ").append(toIndentedString(togglingShuffle)).append("\n");
    sb.append("    togglingRepeatTrack: ").append(toIndentedString(togglingRepeatTrack)).append("\n");
    sb.append("    transferringPlayback: ").append(toIndentedString(transferringPlayback)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
