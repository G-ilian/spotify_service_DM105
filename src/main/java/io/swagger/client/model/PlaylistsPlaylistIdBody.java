/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * OpenAPI spec version: 2024.3.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
/**
 * PlaylistsPlaylistIdBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-01T19:29:10.951410897Z[GMT]")

public class PlaylistsPlaylistIdBody extends HashMap<String, Object> {
  @SerializedName("name")
  private String name = null;

  @SerializedName("public")
  private Boolean _public = null;

  @SerializedName("collaborative")
  private Boolean collaborative = null;

  @SerializedName("description")
  private String description = null;

  public PlaylistsPlaylistIdBody name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The new name for the playlist, for example &#x60;\&quot;My New Playlist Title\&quot;&#x60; 
   * @return name
  **/
  @Schema(description = "The new name for the playlist, for example `\"My New Playlist Title\"` ")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PlaylistsPlaylistIdBody _public(Boolean _public) {
    this._public = _public;
    return this;
  }

   /**
   * If &#x60;true&#x60; the playlist will be public, if &#x60;false&#x60; it will be private. 
   * @return _public
  **/
  @Schema(description = "If `true` the playlist will be public, if `false` it will be private. ")
  public Boolean isPublic() {
    return _public;
  }

  public void setPublic(Boolean _public) {
    this._public = _public;
  }

  public PlaylistsPlaylistIdBody collaborative(Boolean collaborative) {
    this.collaborative = collaborative;
    return this;
  }

   /**
   * If &#x60;true&#x60;, the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client. &lt;br/&gt; _**Note**: You can only set &#x60;collaborative&#x60; to &#x60;true&#x60; on non-public playlists._ 
   * @return collaborative
  **/
  @Schema(description = "If `true`, the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client. <br/> _**Note**: You can only set `collaborative` to `true` on non-public playlists._ ")
  public Boolean isCollaborative() {
    return collaborative;
  }

  public void setCollaborative(Boolean collaborative) {
    this.collaborative = collaborative;
  }

  public PlaylistsPlaylistIdBody description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Value for playlist description as displayed in Spotify Clients and in the Web API. 
   * @return description
  **/
  @Schema(description = "Value for playlist description as displayed in Spotify Clients and in the Web API. ")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlaylistsPlaylistIdBody playlistsPlaylistIdBody = (PlaylistsPlaylistIdBody) o;
    return Objects.equals(this.name, playlistsPlaylistIdBody.name) &&
        Objects.equals(this._public, playlistsPlaylistIdBody._public) &&
        Objects.equals(this.collaborative, playlistsPlaylistIdBody.collaborative) &&
        Objects.equals(this.description, playlistsPlaylistIdBody.description) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, _public, collaborative, description, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlaylistsPlaylistIdBody {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    _public: ").append(toIndentedString(_public)).append("\n");
    sb.append("    collaborative: ").append(toIndentedString(collaborative)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
