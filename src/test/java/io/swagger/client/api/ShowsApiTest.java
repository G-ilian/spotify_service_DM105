/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * OpenAPI spec version: 2024.3.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.InlineResponse2003;
import io.swagger.client.model.InlineResponse401;
import io.swagger.client.model.MeShowsBody;
import io.swagger.client.model.MeShowsBody1;
import io.swagger.client.model.PagingSavedShowObject;
import io.swagger.client.model.PagingSimplifiedEpisodeObject;
import io.swagger.client.model.ShowObject;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ShowsApi
 */
@Ignore
public class ShowsApiTest {

    private final ShowsApi api = new ShowsApi();

    /**
     * Check User&#x27;s Saved Shows 
     *
     * Check if one or more shows is already saved in the current Spotify user&#x27;s library. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void checkUsersSavedShowsTest() throws Exception {
        String ids = null;
        List<Boolean> response = api.checkUsersSavedShows(ids);

        // TODO: test validations
    }
    /**
     * Get Show 
     *
     * Get Spotify catalog information for a single show identified by its unique Spotify ID. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAShowTest() throws Exception {
        String id = null;
        String market = null;
        ShowObject response = api.getAShow(id, market);

        // TODO: test validations
    }
    /**
     * Get Show Episodes 
     *
     * Get Spotify catalog information about an showâ€™s episodes. Optional parameters can be used to limit the number of episodes returned. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAShowsEpisodesTest() throws Exception {
        String id = null;
        String market = null;
        Integer limit = null;
        Integer offset = null;
        PagingSimplifiedEpisodeObject response = api.getAShowsEpisodes(id, market, limit, offset);

        // TODO: test validations
    }
    /**
     * Get Several Shows 
     *
     * Get Spotify catalog information for several shows based on their Spotify IDs. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getMultipleShowsTest() throws Exception {
        String ids = null;
        String market = null;
        InlineResponse2003 response = api.getMultipleShows(ids, market);

        // TODO: test validations
    }
    /**
     * Get User&#x27;s Saved Shows 
     *
     * Get a list of shows saved in the current Spotify user&#x27;s library. Optional parameters can be used to limit the number of shows returned. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUsersSavedShowsTest() throws Exception {
        Integer limit = null;
        Integer offset = null;
        PagingSavedShowObject response = api.getUsersSavedShows(limit, offset);

        // TODO: test validations
    }
    /**
     * Remove User&#x27;s Saved Shows 
     *
     * Delete one or more shows from current Spotify user&#x27;s library. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeShowsUserTest() throws Exception {
        String ids = null;
        MeShowsBody1 body = null;
        String market = null;
        api.removeShowsUser(ids, body, market);

        // TODO: test validations
    }
    /**
     * Save Shows for Current User 
     *
     * Save one or more shows to current Spotify user&#x27;s library. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void saveShowsUserTest() throws Exception {
        String ids = null;
        MeShowsBody body = null;
        api.saveShowsUser(ids, body);

        // TODO: test validations
    }
}
